* {
    box-sizing: border-box;
}

html,
body {
    height: 100%;
    font: 28px/14px 'Lucida Grande', Tahoma, Verdana, sans-serif;
    line-height: 2em;
    text-align: center;
    box-sizing: border-box;    
}

.main-wrapper {
    display: flex;
    height: 100%; 
    border: 1px solid $black;
}

.wrapper {
    display: flex;
    flex-direction: column;
    height: 100%;
    flex: 4;  
}

.navigation {
    flex: 1;
    background-color: $lightBlue;

    &__link {
        display: block;
        font-size: 14px;
    }
}

.header {
    height: 340px;
    background-color: $lightCoral;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;    
}

.main {
    display: flex;
    height: 100%;
    align-items: stretch;
	position: relative;    

    &__content {
        order: 2;
        flex: 1;
        padding: 20px;
        background-color: $lightGoldenrodYellow;
        line-height: 1em;
        text-align: justify; 
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;                
    }   

    &__wrapper-slider {
        width: 985px;
        overflow: hidden;
        position: relative;  
    }

    &__list {
        display: flex;
        position: absolute;
        bottom: 20px;
        left: 45%;
        list-style-type: none;        
    }
}

.footer {
    height: 112px;
    font-size: 30px;
    background-color: $lightCoral;
}

.slides {
    width: 2988px;
    display: flex;
    flex-wrap: wrap;
    transition: all 1000ms; 
    padding-left: 0;     

    &__item {
		display: flex;
        width: 985px;
        height: 360px;
        background-size: cover;

        &--first{
            background-image: url('../images/image01.jpeg');
        }
        &--second{
            background-image: url('../images/image02.jpeg');
        }
        &--third{
            background-image: url('../images/image03.jpeg');
        }
    }
}

.list {
    &__button {
        width: 11px;
        height: 14px;
        margin-right: 25px;        
        background-color: $gray;        
        border: 1px solid $black;
        text-indent: -9999px;
        border-radius: 50%;

        &--check {
            background-color: transparent;  
            background-color: $white;                
        }

        &--last {
            margin-right: 0;                    
        }
    }
}

html, body {
    height: 100%;
}

.clock {
  width: $clockSize;
  height: $clockSize;
  padding: $clockPadding;

    &__wrapper {
        position: relative;
        width: 100%;
        height: 100%;
        background: $white;
        border: $innerBorderWidth solid $innerBorderColor;
        border-radius: 100%;
    }

    &__hand {
        position: absolute;
        top: 50%;
        left: 50%;
        width: ($clockSize / 50);
        background-color: $black;
        
        &--hour {
            height: ($clockSize / 4);
            margin-top: -($clockSize / 13.2);
            transform: rotate(0deg) translate(-50%, -50%);
            transform-origin: 0 ($clockSize / 13.2);
        }

        &--minute {
            height: ($clockSize / 3);
            margin-top: -($clockSize / 13.2);
            transform: rotate(0deg) translate(-50%, -50%);
            transform-origin: 0 ($clockSize / 13.2);
        }

        &--second {
            width: ($clockSize / 185);
            height: ($clockSize / 3);
            background-color: $secondHandBackgroundColor;
            margin-top: -($clockSize / 10);
            transform: rotate(0deg) translate(-50%, -50%);
            transform-origin: 0 ($clockSize / 10);
        }
    }  
    &__graduation {
        display: block;
        position: absolute;
        top: ($innerBorderWidth * 1.5);
        left: 50%;
        width: ($clockSize / 185);
        height: ($clockSize / 40);
        background-color: $black;
        transform: rotate(0deg) translateX(-50%);
        transform-origin: 0 ((($clockSize - ($clockPadding * 2)) / 2) - ($innerBorderWidth * 3));

        &:nth-child(5n-4) {
            width: ($clockSize / 90);
            height: ($clockSize / 18);
        }

        @for $i from 1 through 60 {
            &:nth-child(#{$i}) {
                transform: rotate(#{( 6 * $i) - 5}deg) translateX(-50%);
            }
        }
    }
}

